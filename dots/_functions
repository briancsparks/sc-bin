
#echo "._functions start"

fingerprint() { ssh-keygen -lf $1 -E md5; }
gam() { git commit -am "$*"; }
gaam() { git add . && git commit -am "$*"; }

refaactoring() { git add . && git commit -am "Refactoring"; }
fixeda() { git add . && git commit -am "Fixed"; }
wipa() { git add . && git commit -am "WIP"; }

findbranch() {
  git branch -a | egrep "$1" | head -1 | cut -d/ -f 3
}

__check_pip() {
  if [[ $1 == force ]]; then
    local FORCE=1
    shift
  fi

  if [[ $1 != install ]]; then
    #echo "pip not installing - OK"
    pip $@
  elif [[ -z $VIRTUAL_ENV && -z $FORCE ]]; then
    echo ""
    echo "!!! Must be in a virtual env to pip-install. Use 'virtualenv' or 'vert'"
    echo ""

    return 9
  else
    #echo "pip install into venv - OK"
    pip $@
  fi
  #echo "Done"
}

__gitbranch() {
  git branch | grep '^\*' | grep -o '[^ ]*$' | tail -1
}

branchname() {
  git branch -a | egrep "$1" | head -1 | cut -d/ -f 3
}

vert_main() {
  local PVER="3.8"
  local ENVR="venv"

  if [[ $# > 0 ]]; then
    PVER="$1"
    shift
  fi

  if [[ $# > 0 ]]; then
    ENVR="$1"
    shift
  fi

  if [[ -d $ENVR ]]; then
    source "$ENVR/bin/activate"
    echo "---------- using existing virtualenv: $ENVR, python$PVER ----------"
  else
    echo "---------- virtualenv -p python$PVER $ENVR ----------"
    virtualenv -p "python$PVER" "$ENVR"
    source "$ENVR/bin/activate"

    echo '---------- pip install --upgrade pip wheel ----------'
    pip install --upgrade pip wheel

    echo ""
    echo "---------- Now install any other packages like ----------"
    echo ""
    echo "pip install 'git+ssh://git@github.com/skysafe/echodyne'"
    echo ""
    echo "Then install..."
    echo ""
    echo "pip install -e '.[dev]'"
    echo ""
  fi
}

vert() {
  #local GITTOP="$(git rev-parse --show-toplevel)"
  local BRANCH="$(__gitbranch)"
  if [[ -n $BRANCH ]]; then
    if [[ $BRANCH == main ]]; then
      echo "On main branch! Switch branches or vert_main"
    else
      vert_main $@
    fi
  fi
}

#echo "._functions end"

# vim: ft=bash:

