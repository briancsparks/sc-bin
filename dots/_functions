
fingerprint() { ssh-keygen -lf $1 -E md5; }
gam() { git commit -am "$*"; }
gaam() { git add . && git commit -am "$*"; }

refaactoring() { git add . && git commit -am "Refactoring"; }
fixeda() { git add . && git commit -am "Fixed"; }
wipa() { git add . && git commit -am "WIP"; }

__check_pip() {
  if [[ $1 == force ]]; then
    local FORCE=1
    shift
  fi

  if [[ $1 != install ]]; then
    pip $@
  elif [[ -z $VIRTUAL_ENV && -z $FORCE ]]; then
    echo ""
    echo "!!! Must be in a virtual env to pip-install. Use 'virtualenv' or 'vert'"
    echo ""

    return 9
  else
    pip $@
  fi
}

__gitbranch() {
  git branch | grep '^\*' | grep -o '[^ ]*$' | tail -1
}

branch_name() {
  git branch -a | egrep $1 | cut -d/ -f 3
}

vert_main() {
  local PVER="3.9"
  local ENVR="venv"

  if [[ $# > 0 ]]; then
    PVER="$1"
    shift
  fi

  if [[ $# > 0 ]]; then
    ENVR="$1"
    shift
  fi

  if [[ -d $ENVR ]]; then
    source "$ENVR/bin/activate"
  else
    echo "---------- virtualenv -p python$PVER $ENVR ----------"
    virtualenv -p "python$PVER" "$ENVR"
    source "$ENVR/bin/activate"

    echo '---------- pip install --upgrade pip wheel ----------'
    pip install --upgrade pip wheel

    echo ""
    echo "---------- Now install any other packages like ----------"
    echo ""
    echo "pip install 'echodyne @ git+ssh://git@github.com/skysafe/echodyne'"
    echo ""
    echo "Then install..."
    echo ""
    echo "pip install -e '.[dev]'"
    echo ""
  fi
}

vert() {
  local BRANCH="$(__gitbranch)"
  if [[ $BRANCH == main ]]; then
    echo "On main branch! Switch branches or vert_main"
  else
    vert_main $@
  fi
}

# vim: ft=bash:

